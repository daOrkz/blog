<?php

namespace Tests\Feature;

use App\Models\Category;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class AdminPanelCategoryTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub


    }

    public function test_login_admin_page()
    {
        $response = $this->get('/admin');

        $response->assertStatus(200);
    }

    public function test_category_index_page_success()
    {
        $response = $this->get('/admin/categories');
        $response->assertOk();
    }

    public function test_category_create_page_success()
    {
        $response = $this->get('/admin/categories/create');
        $response->assertOk();
    }

    public function test_category_create_storage_success()
    {
        $data = [
            'title' => 'category title',
        ];

        $response = $this->post('/admin/categories/create', $data);
        $response->assertRedirect('admin/categories');

        $this->assertDatabaseHas('categories', [
            'title' => $data['title'],
        ]);
    }

    public function test_failed_category_validation_required_storage()
    {
        $data = [
            'title' => '',
        ];

        $response = $this->post('/admin/categories/create', $data);
        $response->assertInvalid([
            'title' => 'Поле должно быть заполнено',
        ]);
    }

    public function test_failed_category_validation_unique_storage()
    {
        $data = [
            'title' => 'category title',
        ];

        $response = $this->post('/admin/categories/create', $data);
        $response = $this->post('/admin/categories/create', $data);

        $response->assertInvalid([
            'title' => 'Такая категория уже есть',
        ]);

    }
}
